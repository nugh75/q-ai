// Questa è la nuova implementazione di renderTimeAnalysis
// Da sostituire nel file UsageAnalysis.jsx

// Dopo le definizioni dei box plot data che ho già aggiunto, il return dovrebbe essere:

  return (
    <div>
      {/* Introduzione - GIÀ AGGIUNTA */}

      {/* 1. ORE RISPARMIATE - STUDENTI - GIÀ INIZIATA*/}
      
        {/* Statistiche */}
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
          gap: '15px',
          marginBottom: '20px'
        }}>
          <div style={{ backgroundColor: '#eff6ff', padding: '15px', borderRadius: '8px' }}>
            <div style={{ fontSize: '0.85rem', color: '#64748b', marginBottom: '5px' }}>Media</div>
            <div style={{ fontSize: '1.8rem', fontWeight: 'bold', color: COLORS.students }}>
              {hoursData.students.hours_saved.mean?.toFixed(1) || 0}h
            </div>
          </div>
          <div style={{ backgroundColor: '#eff6ff', padding: '15px', borderRadius: '8px' }}>
            <div style={{ fontSize: '0.85rem', color: '#64748b', marginBottom: '5px' }}>Mediana</div>
            <div style={{ fontSize: '1.8rem', fontWeight: 'bold', color: COLORS.students }}>
              {hoursData.students.hours_saved.median || 0}h
            </div>
          </div>
          <div style={{ backgroundColor: '#eff6ff', padding: '15px', borderRadius: '8px' }}>
            <div style={{ fontSize: '0.85rem', color: '#64748b', marginBottom: '5px' }}>Outliers</div>
            <div style={{ fontSize: '1.8rem', fontWeight: 'bold', color: '#dc2626' }}>
              {hoursData.students.hours_saved.outliers_count || 0}
            </div>
          </div>
        </div>

        {/* Box Plot */}
        <ResponsiveContainer width="100%" height={600}>
          <ComposedChart data={hoursSavedBoxData} margin={{ top: 40, right: 50, left: 40, bottom: 70 }}>
            <CartesianGrid strokeDasharray="5 5" stroke="#cbd5e1" strokeOpacity={0.4} vertical={false} />
            <XAxis dataKey="name" />
            <YAxis domain={[0, 14]} ticks={[0, 2, 4, 6, 8, 10, 12, 14]} label={{ value: 'Ore settimanali', angle: -90, position: 'insideLeft' }} />
            <Tooltip />
            <Legend />
            <Bar 
              dataKey="median" 
              fill="transparent" 
              name="Distribuzione ore"
              shape={(props) => {
                const dataPoint = hoursSavedBoxData[props.index]
                if (!dataPoint) return null
                return <BoxPlotShape 
                  {...props} 
                  q1={dataPoint.q1}
                  q3={dataPoint.q3}
                  median={dataPoint.median}
                  min={dataPoint.min}
                  max={dataPoint.max}
                  fill={dataPoint.color}
                  outliers={dataPoint.outliers}
                />
              }}
            />
          </ComposedChart>
        </ResponsiveContainer>

        {/* Power Users */}
        <div style={{ backgroundColor: '#fef2f2', padding: '15px', borderRadius: '8px', marginTop: '20px' }}>
          <strong style={{ color: '#991b1b' }}>Power Users: </strong>
          <span style={{ color: '#7f1d1d' }}>
            {hoursData.students.hours_saved.outliers_count || 0} studenti risparmiano oltre {(hoursData.students.hours_saved.q3 + 1.5 * (hoursData.students.hours_saved.iqr || 0)).toFixed(1)}h/settimana
            {hoursData.students.hours_saved.outliers?.length > 0 && ` (range: ${Math.min(...hoursData.students.hours_saved.outliers).toFixed(1)}-${Math.max(...hoursData.students.hours_saved.outliers).toFixed(1)}h)`}
          </span>
        </div>
      </section>

      {/* 2. PREPARAZIONE LEZIONI - DOCENTI ATTIVI */}
      <section style={{
        backgroundColor: 'white',
        padding: '25px',
        borderRadius: '12px',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
        marginBottom: '25px'
      }}>
        <h3 style={{ margin: '0 0 15px 0', color: '#334155', display: 'flex', alignItems: 'center', gap: '10px' }}>
          <Icons.Teacher className="w-6 h-6" style={{ color: COLORS.teachers_active }} />
          Ore Preparazione Lezioni con IA - Docenti Attivi
        </h3>
        
        <p style={{ color: '#64748b', fontSize: '0.95rem', marginBottom: '20px', lineHeight: '1.6' }}>
          Tempo settimanale che i docenti attualmente in servizio dedicano alla <strong>preparazione delle lezioni</strong> 
          utilizzando strumenti di intelligenza artificiale.
        </p>

        {/* Statistiche */}
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
          gap: '15px',
          marginBottom: '20px'
        }}>
          <div style={{ backgroundColor: '#f0fdf4', padding: '15px', borderRadius: '8px' }}>
            <div style={{ fontSize: '0.85rem', color: '#64748b', marginBottom: '5px' }}>Media</div>
            <div style={{ fontSize: '1.8rem', fontWeight: 'bold', color: COLORS.teachers_active }}>
              {hoursData.teachers_active.lesson_planning.mean?.toFixed(1) || 0}h
            </div>
          </div>
          <div style={{ backgroundColor: '#f0fdf4', padding: '15px', borderRadius: '8px' }}>
            <div style={{ fontSize: '0.85rem', color: '#64748b', marginBottom: '5px' }}>Mediana</div>
            <div style={{ fontSize: '1.8rem', fontWeight: 'bold', color: COLORS.teachers_active }}>
              {hoursData.teachers_active.lesson_planning.median || 0}h
            </div>
          </div>
          <div style={{ backgroundColor: '#f0fdf4', padding: '15px', borderRadius: '8px' }}>
            <div style={{ fontSize: '0.85rem', color: '#64748b', marginBottom: '5px' }}>Outliers</div>
            <div style={{ fontSize: '1.8rem', fontWeight: 'bold', color: '#dc2626' }}>
              {hoursData.teachers_active.lesson_planning.outliers_count || 0}
            </div>
          </div>
        </div>

        {/* Box Plot */}
        <ResponsiveContainer width="100%" height={600}>
          <ComposedChart data={lessonPlanningBoxData} margin={{ top: 40, right: 50, left: 40, bottom: 70 }}>
            <CartesianGrid strokeDasharray="5 5" stroke="#cbd5e1" strokeOpacity={0.4} vertical={false} />
            <XAxis dataKey="name" />
            <YAxis domain={[0, 14]} ticks={[0, 2, 4, 6, 8, 10, 12, 14]} label={{ value: 'Ore settimanali', angle: -90, position: 'insideLeft' }} />
            <Tooltip />
            <Legend />
            <Bar 
              dataKey="median" 
              fill="transparent" 
              name="Distribuzione ore"
              shape={(props) => {
                const dataPoint = lessonPlanningBoxData[props.index]
                if (!dataPoint) return null
                return <BoxPlotShape 
                  {...props} 
                  q1={dataPoint.q1}
                  q3={dataPoint.q3}
                  median={dataPoint.median}
                  min={dataPoint.min}
                  max={dataPoint.max}
                  fill={dataPoint.color}
                  outliers={dataPoint.outliers}
                />
              }}
            />
          </ComposedChart>
        </ResponsiveContainer>

        {/* Power Users */}
        <div style={{ backgroundColor: '#fef2f2', padding: '15px', borderRadius: '8px', marginTop: '20px' }}>
          <strong style={{ color: '#991b1b' }}>Power Users: </strong>
          <span style={{ color: '#7f1d1d' }}>
            {hoursData.teachers_active.lesson_planning.outliers_count || 0} docenti dedicano oltre {(hoursData.teachers_active.lesson_planning.q3 + 1.5 * (hoursData.teachers_active.lesson_planning.iqr || 0)).toFixed(1)}h/settimana
            {hoursData.teachers_active.lesson_planning.outliers?.length > 0 && ` (range: ${Math.min(...hoursData.teachers_active.lesson_planning.outliers).toFixed(1)}-${Math.max(...hoursData.teachers_active.lesson_planning.outliers).toFixed(1)}h)`}
          </span>
        </div>
      </section>

      {/* 3. FORMAZIONE/AUTOAPPRENDIMENTO - TUTTI I DOCENTI */}
      <section style={{
        backgroundColor: 'white',
        padding: '25px',
        borderRadius: '12px',
        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
        marginBottom: '25px'
      }}>
        <h3 style={{ margin: '0 0 15px 0', color: '#334155', display: 'flex', alignItems: 'center', gap: '10px' }}>
          <Icons.Chart className="w-6 h-6" style={{ color: COLORS.teachers_training }} />
          Ore Formazione/Autoapprendimento sull'IA - Docenti
        </h3>
        
        <p style={{ color: '#64748b', fontSize: '0.95rem', marginBottom: '20px', lineHeight: '1.6' }}>
          Tempo settimanale investito dai docenti nella <strong>formazione e autoapprendimento</strong> sull'uso dell'intelligenza artificiale, 
          confrontando docenti attivi e docenti in formazione.
        </p>

        {/* Statistiche */}
        <div style={{ marginBottom: '20px' }}>
          <h4 style={{ margin: '0 0 15px 0', color: '#334155', fontSize: '1rem' }}>Confronto tra gruppi</h4>
          <div style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
            gap: '15px'
          }}>
            <div style={{ backgroundColor: '#f0fdf4', padding: '20px', borderRadius: '8px', borderLeft: `4px solid ${COLORS.teachers_active}` }}>
              <div style={{ fontSize: '0.9rem', fontWeight: 'bold', color: '#334155', marginBottom: '12px' }}>Docenti Attivi</div>
              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '10px' }}>
                <div>
                  <div style={{ fontSize: '0.75rem', color: '#64748b' }}>Media</div>
                  <div style={{ fontSize: '1.4rem', fontWeight: 'bold', color: COLORS.teachers_active }}>
                    {hoursData.teachers_active.training.mean?.toFixed(1) || 0}h
                  </div>
                </div>
                <div>
                  <div style={{ fontSize: '0.75rem', color: '#64748b' }}>Mediana</div>
                  <div style={{ fontSize: '1.4rem', fontWeight: 'bold', color: COLORS.teachers_active }}>
                    {hoursData.teachers_active.training.median || 0}h
                  </div>
                </div>
                <div>
                  <div style={{ fontSize: '0.75rem', color: '#64748b' }}>Outliers</div>
                  <div style={{ fontSize: '1.4rem', fontWeight: 'bold', color: '#dc2626' }}>
                    {hoursData.teachers_active.training.outliers_count || 0}
                  </div>
                </div>
              </div>
            </div>

            <div style={{ backgroundColor: '#fffbeb', padding: '20px', borderRadius: '8px', borderLeft: `4px solid ${COLORS.teachers_training}` }}>
              <div style={{ fontSize: '0.9rem', fontWeight: 'bold', color: '#334155', marginBottom: '12px' }}>In Formazione</div>
              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '10px' }}>
                <div>
                  <div style={{ fontSize: '0.75rem', color: '#64748b' }}>Media</div>
                  <div style={{ fontSize: '1.4rem', fontWeight: 'bold', color: COLORS.teachers_training }}>
                    {hoursData.teachers_training.training.mean?.toFixed(1) || 0}h
                  </div>
                </div>
                <div>
                  <div style={{ fontSize: '0.75rem', color: '#64748b' }}>Mediana</div>
                  <div style={{ fontSize: '1.4rem', fontWeight: 'bold', color: COLORS.teachers_training }}>
                    {hoursData.teachers_training.training.median || 0}h
                  </div>
                </div>
                <div>
                  <div style={{ fontSize: '0.75rem', color: '#64748b' }}>Outliers</div>
                  <div style={{ fontSize: '1.4rem', fontWeight: 'bold', color: '#dc2626' }}>
                    {hoursData.teachers_training.training.outliers_count || 0}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Box Plot */}
        <ResponsiveContainer width="100%" height={600}>
          <ComposedChart data={trainingBoxData} margin={{ top: 40, right: 50, left: 40, bottom: 70 }}>
            <CartesianGrid strokeDasharray="5 5" stroke="#cbd5e1" strokeOpacity={0.4} vertical={false} />
            <XAxis dataKey="name" />
            <YAxis domain={[0, 14]} ticks={[0, 2, 4, 6, 8, 10, 12, 14]} label={{ value: 'Ore settimanali', angle: -90, position: 'insideLeft' }} />
            <Tooltip />
            <Legend />
            <Bar 
              dataKey="median" 
              fill="transparent" 
              name="Distribuzione ore"
              shape={(props) => {
                const dataPoint = trainingBoxData[props.index]
                if (!dataPoint) return null
                return <BoxPlotShape 
                  {...props} 
                  q1={dataPoint.q1}
                  q3={dataPoint.q3}
                  median={dataPoint.median}
                  min={dataPoint.min}
                  max={dataPoint.max}
                  fill={dataPoint.color}
                  outliers={dataPoint.outliers}
                />
              }}
            />
          </ComposedChart>
        </ResponsiveContainer>

        {/* Power Users per entrambi i gruppi */}
        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px', marginTop: '20px' }}>
          <div style={{ backgroundColor: '#fef2f2', padding: '15px', borderRadius: '8px' }}>
            <strong style={{ color: '#991b1b' }}>Power Users - Docenti Attivi: </strong>
            <span style={{ color: '#7f1d1d', fontSize: '0.9rem' }}>
              {hoursData.teachers_active.training.outliers_count || 0} docenti oltre {(hoursData.teachers_active.training.q3 + 1.5 * (hoursData.teachers_active.training.iqr || 0)).toFixed(1)}h/sett.
            </span>
          </div>
          <div style={{ backgroundColor: '#fef2f2', padding: '15px', borderRadius: '8px' }}>
            <strong style={{ color: '#991b1b' }}>Power Users - In Formazione: </strong>
            <span style={{ color: '#7f1d1d', fontSize: '0.9rem' }}>
              {hoursData.teachers_training.training.outliers_count || 0} docenti oltre {(hoursData.teachers_training.training.q3 + 1.5 * (hoursData.teachers_training.training.iqr || 0)).toFixed(1)}h/sett.
            </span>
          </div>
        </div>
      </section>
    </div>
  )
}
